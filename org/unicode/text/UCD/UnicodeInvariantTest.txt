# Invariance Tests
#
# This file provides a set of machine-readable invariance tests for Unicode Properties.
#
# Format
#
##########################
# Let <$variable> = <value>
#  Assign a variable to a value. The variable must start with $.
#
##########################
# Show <unicodeSet>
#  List any set on the console, for viewing and debugging. For <unicodeSet> see below.
#
##########################
# <unicodeSet> is a boolean combinations of properties and character ranges, as defined in LDML, 
#  with the following extensions.
#
#  Example:
#   [\p{General_Category=Unassigned}-[a-zA-Z]]
#
# Property Name:
#
# <propertyName> can be the short or long form as in the PropertyAliases.txt
#
# <propertyName> can be prefixed with "U<version>:"
#   Examples: U5.1:Whitespace
#
# A version of -1 indicates that the property is the previous released version.
#  That is, if the version is 4.0.1, then the U-1 version is 4.0.0
#
# Property Value:
#
# If the propertyValue is missing, it is defaulted to true
# If the value is of the form /.../, then the ... is interpreted as a regular expression
# The value (if enumerated) can be the short or long form as in PropertyValueAliases.txt
#
##########################
# Test <unicodeSet> <relation> <unicodeSet>
#
# Tests that the relation is true for the two sets. The "Test" keyword is optional.
#
#   relation := '='             // has identical contents to
#            := '⊃'             // is proper superset of
#            := '⊇'             // is superset of 
#            := '⊂'             // is proper subset of
#            := '⊆'             // is subset of
#            := '∥'             // has no intersection
#            := '≉'             // none of the above (they overlap, and neither contains the other)
#
# When this file is parsed, a parse error message may contain <@>
# to indicate the location of an error in the input line.
#
# If there is an error in the test, a comparison listing of the two sides of the relation is generated.
#

##########################
# General Constants
##########################

Let $gcAllPunctuation = [\p{gc=Open_Punctuation} \p{gc=Close_Punctuation} \p{gc=Dash_Punctuation} \p{gc=Connector_Punctuation} \p{gc=Other_Punctuation} \p{gc=Initial_Punctuation} \p{gc=Final_Punctuation}]
Let $gcAllSymbols = [\p{gc=Currency_Symbol} \p{gc=Modifier_Symbol} \p{gc=Math_Symbol} \p{gc=Other_Symbol}]
Let $gcAllMarks = [\p{gc=Nonspacing_Mark} \p{gc=Enclosing_Mark} \p{gc=Spacing_Mark}]

$gcAllPunctuation = \p{gc=/_Punctuation/}
$gcAllSymbols = \p{gc=/_Symbols/}
$gcAllMarks = \p{gc=/_Mark/}

##### EXAMPLES OF USAGE #####

# Show the current unassigned, minus last version's unassigned, minus the characters with no decomposition type
# Show [[^\p{gc=unassigned}]-[^\p{U-1:gc=unassigned}]-[^\p{dt=none}]]

# Test that the Zs characters are disjoint with the Zp characters
# \p{GC=Zs} ∥ \p{GC=Zp}

# Test that the EA Neutral characters have no containment relation
# \p{East_Asian_Width=Neutral} ≉ \p{GC=Uppercase_Letter}

# Test that the common characters are disjoint with alphabetic minus math
# \p{Script=Common} ∥ [\p{Alphabetic} - \p{Math}]

# \p{Pattern_Whitespace} = [\p{Whitespace} \u200E \u200F]
# \p{Pattern_Syntax} = [\p{gcAllSymbols} \p{gcAllPunctuation} [\u2190-\u2BFF\u2e00-\u2e7F]]
# \p{Pattern_Syntax} ∥ \p{Alphabetic}
# \p{Pattern_Syntax} ∥ \p{ID_Continue}

# [\p{script=greek}&\p{gc=/(?i)letter/}] = [;\u00B5\u00B7\u00C4\u00CB\u00CF\u00D6\u00DC\u00E4\u00EB\u00EF\u00F6\u00FC\u00FF-\u0101\u0112-\u0113\u012A-\u012B\u014C-\u014D\u016A-\u016B\u0178\u01D5-\u01DC\u01DE-\u01E3\u01EC-\u01ED\u022A-\u022D\u0230-\u0233\u0304\u0308\u0313-\u0314\u0342-\u0345\u037A\u037E\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03CE\u03D0-\u03D7\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F5\u0401\u0407\u0451\u0457\u04D2-\u04D3\u04DA-\u04DF\u04E2-\u04E7\u04EA-\u04F1\u04F4-\u04F5\u04F8-\u04F9\u1E14-\u1E17\u1E20-\u1E21\u1E26-\u1E27\u1E2E-\u1E2F\u1E38-\u1E39\u1E4E-\u1E53\u1E5C-\u1E5D\u1E7A-\u1E7B\u1E84-\u1E85\u1E8C-\u1E8D\u1E97\u1F00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC1-\u1FC4\u1FC6-\u1FCC\u1FCF-\u1FD3\u1FD6-\u1FDB\u1FDF-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2126]

# \p{script=greek} = \p{U-1:script=greek}
# \p{gc=lm} = \p{script=inherited}

# Examples of parsing errors

# \p{LBA=Neutral} =  \p{GC=Zp} # example of non-existant property
# \p{LB=foo} =  \p{GC=Zp} # example of non-existant value
# \p{GC=Zs} @ \p{GC=Zp} # example of unknown relation

#### REAL INVARIANTS FOLLOW ####


##########################
# Stability
##########################

# Once assigned, always assigned

\p{GC=unassigned} ⊆ \p{U-1:GC=unassigned}

# The General_Category property value Control (Cc) is immutable: the set of code points with that value will never change.

\p{GC=Cc} = \p{U-1:GC=Cc}
    
# All characters other than those with General_Category property values Spacing_Mark (Mc) and Nonspacing_Mark (Mn) have the Canonical_Combining_Class property value 0.

\p{CCC=0} ⊇ [^ \p{GC=Mc} \p{GC=Mn}]

# The General_Category property value Private_Use (Co) is immutable: the set of code points with that value will never change.

\p{GC=Co} = \p{U-1:GC=Co}

# The General_Category property value Surrogate (Cs) is immutable: the set of code points with that value will never change.

\p{GC=Cs} = \p{U-1:GC=Cs}

# The Noncharacter_Code_Point property is an immutable code point property, which means that its property values for all Unicode code points will never change.

\p{NChar} = \p{U-1:NChar}

# All characters with the Lowercase property and all characters with the Uppercase property have the Alphabetic property .

\p{Alphabetic} ⊃ [\p{Uppercase} \p{Lowercase}]

# Musical symbol combining marks, other oddities
Let $AlphaExclusions = [\U0001D165-\U0001D166 \U0001D16D-\U0001D172 \u0F3E-\u0F3F \u1063-\u1064 \u1069-\u106D \u1087-\u108C \u108F \u1B44 \u1BAA \uA953]
Show $AlphaExclusions

\p{Alphabetic} ⊇ [\p{GC=Lu} \p{GC=Ll} \p{GC=Lt} \p{GC=Lm} \p{GC=Lo} \p{GC=Nl} \p{GC=Mc} - $AlphaExclusions]

# Show [\p{GC=Mc} - \p{alphabetic}]
# Show [\p{GC=Mc} & \p{alphabetic}]

# The Pattern_Syntax and Pattern_Whitespace properties are immutable code point properties, which means that their property values for all Unicode code points will never change.

\p{Pattern_Whitespace} = \p{U-1:Pattern_Whitespace}
\p{Pattern_Syntax} = \p{U-1:Pattern_Syntax}

##########################
# Misc Properties
##########################

\p{Whitespace} ⊃ [\p{GC=Zs} \p{GC=Zp} \p{GC=Zl}]
\p{GC=Zs} ≉ \p{Name=/SPACE/}

\p{Dash} ⊃ [\p{GC=Pd}]

\p{Script=Common} ∥ [\p{GC=Mn} \p{GC=Me} \p{Join_Control}]
\p{Script=Inherited} ⊆ [\p{GC=Mn} \p{GC=Me} \p{Join_Control}]
\p{Script=Unknown} = [\p{GC=Cn} \p{GC=Co} \p{GC=Cs}]

# [\p{Alphabetic}] ∥ \p{Script=Common}
#  & [\p{Decomposition_Type=None} \p{Decomposition_Type=Canonical}]

##########################
# Numbers
##########################

# Numbers: the following must be equal

\p{General_Category=Decimal_Number} = \p{Numeric_Type=Decimal}

# Decimals are 0-9

Let $decimalValue = \p{Numeric_Value=/[0-9]+(.0)?/}
$decimalValue ⊇ \p{General_Category=Decimal_Number}

# All and only those items with numeric types have numeric values

Let $anyNumericValue = \p{Numeric_Value=/-?[0-9]+.[0-9]+/}
[\p{Numeric_Type=Decimal} \p{Numeric_Type=Digit} \p{Numeric_Type=Numeric}] = $anyNumericValue

##########################
# Decompositions
##########################

# Canonical decompositions (minus exclusions) must be identical across releases
[\p{Decomposition_Type=Canonical} - \p{Full_Composition_Exclusion}] = [\p{U-1:Decomposition_Type=Canonical} - \p{U-1:Full_Composition_Exclusion}]

##########################
# Identifiers
##########################

# Identifiers must be backwards compatible
\p{ID_Start} ⊇ \p{U-1:ID_Start}
\p{ID_Continue} ⊇ \p{U-1:ID_Continue}
\p{XID_Start} ⊇ \p{U-1:XID_Start}
\p{XID_Continue} ⊇ \p{U-1:XID_Continue}

# Continue must contain start
\p{ID_Continue} ⊇ \p{ID_Start}
\p{XID_Continue} ⊇ \p{XID_Start}

# The X versions are subsets of the the plain versions
\p{ID_Continue} ⊇ \p{XID_Continue}
\p{ID_Start} ⊇ \p{XID_Start}

# Identifiers can't intersect pattern stuff
\p{ID_Continue} ∥ [\p{Pattern_Whitespace} \p{Pattern_Syntax}]
\p{Pattern_Whitespace} ∥ [\p{ID_Continue} \p{Pattern_Syntax}]
\p{Pattern_Syntax} ∥ [\p{ID_Continue} \p{Pattern_Whitespace}]

\p{XID_Continue} ∥ [\p{Pattern_Whitespace} \p{Pattern_Syntax}]
\p{Pattern_Whitespace} ∥ [\p{XID_Continue} \p{Pattern_Syntax}]
\p{Pattern_Syntax} ∥ [\p{XID_Continue} \p{Pattern_Whitespace}]



##########################
# LineBreak property
##########################

\p{Line_Break=Unknown} = [\p{General_Category=Unassigned} \p{GeneralCategory=PrivateUse}]
Let $OPInclusions = [\u00A1 \u00BF \u2E18]
Let $NUInclusions = [\u066B\u066C]
Let $PRInclusions = [\u002b\u005c\u00b1\u2116\u2212\u2213]

\p{LB=OP} = [\p{GC=Ps} $OPInclusions]
\p{LB=CL} ⊃ \p{GC=Pe}
\p{LB=CM} = [\p{GC=Mn} \p{GC=Me} \p{GC=Mc} \p{GC=Cc} \p{GC=Cf} -\p{LB=SA} -\p{LB=WJ} -\p{LB=ZW} -\p{LB=BA} -\p{LB=LF} -\p{LB=BK} -\p{LB=CR} -\p{LB=NL} -\p{LB=GL} -\p{LB=AL}]
\p{LB=NU} = [\p{GC=Nd} $NUInclusions - \p{EA=F} ]
\p{LB=PR} = [\p{GC=Sc} - \p{LB=PO} ]
\p{LB=QU} = [\p{GC=Pf} \p{GC=Pi} \u0022 \u0027 \u275B-\u275E \u2E00-\u2E01 \u2E06-\u2E08 \u2E0B]
\p{LB=SG} = \p{GC=Cs}
\p{LB=SP} = [\u0020]
\p{LB=SY} = [\u002F]
\p{LB=WJ} = [\u2060\uFEFF]
\p{LB=ZW} = [\u200B]

# SA are limited to certain scripts:
Let $SAScripts = [\p{script=thai} \p{script=lao} \p{script=myanmar} \p{script=khmer} \p{script=Tai_Le} \p{script=New_Tai_Lue}]
$SAScripts ⊇ \p{LineBreak=SA}

# And in those scripts, they are all the alphabetic spacing characters, plus some odd Cf & Mn
Let $SAScriptExceptions = [\u19DE \u19DF \u1063-\u1064 \u1069-\u106D \u1087-\u108C \u108F \u109E-\u109F]
Show $SAScriptExceptions

[$SAScripts & [\p{Alphabetic} \p{gc=cf} \p{gc=Mn} $SAScriptExceptions]] = [$SAScripts & [\p{LineBreak=SA} \p{LineBreak=CM}]]

##########################
# BIDI
##########################


#BIDI invariant constants
Let $R_blocks = [\u0590-\u05FF \u07C0-\u08FF \uFB1D-\uFB4F \U00010800-\U00010FFF \U0001E800-\U0001EFFF]
Let $AL_blocks = [\u0600-\u07BF \uFB50-\uFDCF \uFDF0-\uFDFF \uFE70-\uFEFF]

#Unassigned characters in these blocks have R or AL respectively
\p{Bidi_Class=R} ⊇ [$R_blocks & \p{gc=Cn}]
\p{Bidi_Class=AL} ⊇ [$AL_blocks & \p{gc=Cn}]

# There are no strong characters of the other directionalities (out of L, AL, R) in these blocks, 
# and anything R or L is in the block (or RLM)
$R_blocks ∥ [\p{Bidi_Class=L} \p{Bidi_Class=AL}]
$AL_blocks ∥ [\p{Bidi_Class=L} \p{Bidi_Class=R}]
[$R_blocks $AL_blocks \u200F] ⊇ [\p{Bidi_Class=AL} \p{Bidi_Class=R}]

##########################
# Derivations
##########################

\p{Math} = [\p{Other_Math} \p{GC=Sm}]
\p{Alphabetic} = [\p{Other_Alphabetic} \p{GC=Lu} \p{GC=Ll} \p{GC=Lt} \p{GC=Lm} \p{GC=Lo} \p{GC=Nl}]
\p{Lowercase} = [\p{Other_Lowercase} \p{GC=Ll}]
\p{Uppercase} = [\p{Other_Uppercase} \p{GC=Lu}]
\p{ID_Start} = [\p{Other_ID_Start} \p{GC=Lu} \p{GC=Ll} \p{GC=Lt} \p{GC=Lm} \p{GC=Lo} \p{GC=Nl} - \p{Pattern_Syntax} - \p{Pattern_White_Space}]
\p{ID_Continue} = [\p{Other_ID_Continue} \p{ID_Start} \p{GC=Mn} \p{GC=Mc} \p{GC=Nd} \p{GC=Pc} - \p{Pattern_Syntax} - \p{Pattern_White_Space}] 
\p{Default_Ignorable_Code_Point} = [\p{Other_Default_Ignorable_Code_Point} \p{GC=Cf} \p{Variation_Selector} - [\p{White_Space}\uFFF9-\uFFFB\u0600-\u0603\u06DD\u070F]]

\p{Grapheme_Extend} = [\p{Other_Grapheme_Extend} \p{GC=Me} \p{GC=Mn}]

\p{Grapheme_Base} = [^\p{GC=Cc} \p{GC=Cf} \p{GC=Cs} \p{GC=Co} \p{GC=Cn} \p{GC=Zl} \p{GC=Zp} \p{Grapheme_Extend}]
\p{Grapheme_Link} = \p{CCC=Virama}

# "Minimal" Other_: NOT hard requirements; just if we want to be minimal
# (Should add way to make these warnings, not errors)

\p{Other_Math} = [\p{Math} - \p{GC=Sm}]
\p{Other_Alphabetic} = [\p{Alphabetic} - [\p{GC=Lu} \p{GC=Ll} \p{GC=Lt} \p{GC=Lm} \p{GC=Lo} \p{GC=Nl}]]
\p{Other_Lowercase} = [\p{Lowercase} - \p{GC=Ll}]
\p{Other_Uppercase} = [\p{Uppercase} - \p{GC=Lu}]
\p{Other_ID_Start} = [\p{ID_Start} - [\p{GC=Lu} \p{GC=Ll} \p{GC=Lt} \p{GC=Lm} \p{GC=Lo} \p{GC=Nl} - \p{Pattern_Syntax} - \p{Pattern_White_Space}]]
\p{Other_ID_Continue} = [\p{ID_Continue} - [\p{ID_Start} \p{GC=Mn} \p{GC=Mc} \p{GC=Nd} \p{GC=Pc} - \p{Pattern_Syntax} - \p{Pattern_White_Space}]]

\p{Other_Default_Ignorable_Code_Point} = [\p{Default_Ignorable_Code_Point} - [\p{GC=Cf} \p{Variation_Selector} - [\p{White_Space}\uFFF9-\uFFFB]]]
\p{Other_Grapheme_Extend} = [\p{Grapheme_Extend} - [\p{GC=Me} \p{GC=Mn}]]

##########################
# POSIX Compatibility Properties (UTS#18)
# http://www.opengroup.org/onlinepubs/007904975/basedefs/xbd_chap07.html
##########################

# constants

Let $SP = [\u0020]	# [\N{space}]
Let $TAB = [\u0009] # [\N{CHARACTER TABULATION}]
Let $LF = [\u000A]	# \N{linefeed}
Let $VTAB = [\u000B]	# [\N{LINE TABULATION}]
Let $FF = [\u000C]	# [\N{formfeed}]
Let $CR = [\u000D]	# \N{carriage return}
Let $NEL = [\u0085]	# \N{next line}
Let $ZWNJ = [\u200C]	# [\N{ZERO WIDTH NON-JOINER}]
Let $ZWJ = [\u200D]	# [\N{ZERO WIDTH JOINER}]

Let $strange = [\u24B6-\u24E9]

# Unassigned, Control, Format, Private_Use, Surrogate, 
# Uppercase_Letter, Lowercase_Letter, Titlecase_Letter, Modifier_Letter, Other_Letter,
# Nonspacing_Mark, Enclosing_Mark, Spacing_Mark,
# Decimal_Number, Letter_Number, Other_Number, 
# Space_Separator, Line_Separator, Paragraph_Separator, 
# Dash_Punctuation, Open_Punctuation, Close_Punctuation, Connector_Punctuation, Other_Punctuation, Initial_Punctuation, Final_Punctuation
# Math_Symbol, Currency_Symbol, Modifier_Symbol, Other_Symbol

# UTS Rules

Let $alpha = [\p{Alphabetic} $strange] # \p{Uppercase} $ZWNJ $ZWJ]
Let $lower = \p{Lowercase} 
Let $upper = [\p{Uppercase}]
Let $punct = [$gcAllPunctuation $gcAllSymbols - $alpha]
Let $digit = \p{gc=Decimal_Number} 
Let $xdigit = [\p{gc=Decimal_Number} \p{Hex_Digit}] # in both!
Let $alnum = [$alpha $digit]
Let $space = \p{Whitespace} 
Let $blank = [\p{Whitespace} - [$LF $VTAB $FF $CR $NEL \p{gc=Line_Separator} \p{gc=Paragraph_Separator}]]
Let $cntrl = \p{gc=Control} 
Let $graph = [^$space \p{gc=Control} \p{gc=Surrogate} \p{gc=Unassigned}] # $ZWNJ $ZWJ]
Let $print = [$graph $blank - $cntrl]
Let $word = [$alpha $gcAllMarks $digit \p{gc=Connector_Punctuation}] 

# ===========================

# POSIX locale definition file constraints

$upper ∥ [$cntrl $digit $punct $space]
$upper ⊇ [A-Z]

$lower ∥ [$cntrl $digit $punct $space]
$lower ⊇ [a-z]

$alpha ∥ [$cntrl $digit $punct $space]
$alpha ⊇ [$lower $upper]

$digit ⊇ [0-9]

$alnum = [$alpha $digit]

$space ∥ [$upper $lower $alpha $digit $graph $xdigit]
$space ⊇ [$SP $FF $LF $CR] # $TAB $VTAB $NEL]
$space ⊇ $blank

$cntrl ∥ [$upper $lower $alpha $digit $punct $graph $print $xdigit]

$punct ∥ [$upper $lower $alpha $digit $cntrl $xdigit $SP]

$graph ⊇ [$upper $lower $alpha $digit $xdigit $punct]
$graph ∥ [$SP $cntrl]

$print ⊇ [$upper $lower $alpha $digit $xdigit $punct $graph $SP]
$print ∥ $cntrl

$xdigit ⊇ [$digit [a-f A-F]]

$blank ⊇ [$SP $TAB]

# Extra POSIX 'POSIX locale' constraints

$cntrl ⊇  [\u0000-\u001F]

$punct  ⊇ [[\u0021-\u007E] - [0-9 A-Z a-z]]

[$alpha $lower $upper $punct $digit $xdigit $alnum $space $blank $cntrl $graph $print $word] = [^\p{gc=unassigned} \p{gc=surrogate}]
